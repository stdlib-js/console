{"version":3,"file":"index.mjs","sources":["../log/lib/main.js","../log-each/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar console = require( 'console' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar builtin = console.log;\n\n\n// MAIN //\n\n/**\n* Outputs a message to the debugger console.\n*\n* @param {*} [data] - data to log\n* @param {...*} [args] - additional arguments or substitution values\n* @returns {void}\n*\n* @example\n* log( 'Hello, World!' );\n*\n* @example\n* log( 'Hello, %s!', 'World' );\n*/\nfunction log() {\n\tbuiltin.apply( console, arguments );\n}\n\n\n// EXPORTS //\n\nexport default log;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isCollection from '@stdlib/assert/is-collection';\nimport accessors from '@stdlib/array/base/accessors';\nimport format from '@stdlib/string/format';\nimport logger from './../../log';\n\n\n// MAIN //\n\n/**\n* Inserts array element values into a format string and prints the result.\n*\n* @param {string} str - format string\n* @param {...(Collection|*)} args - collections or values\n* @throws {TypeError} first argument must be a string\n* @throws {RangeError} provided collections must have the same length\n* @returns {void}\n*/\nfunction logEach( str ) {\n\tvar strides;\n\tvar offsets;\n\tvar getters;\n\tvar values;\n\tvar nargs;\n\tvar args;\n\tvar len;\n\tvar v;\n\tvar s;\n\tvar o;\n\tvar i;\n\tvar j;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tnargs = arguments.length;\n\tgetters = [];\n\tstrides = [];\n\targs = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isCollection( v ) ) {\n\t\t\to = accessors( v );\n\t\t\tgetters.push( o.accessors[ 0 ] );\n\t\t\targs.push( v );\n\t\t\tstrides.push( 1 );\n\t\t\tlen = v.length;\n\t\t\ti += 1;\n\t\t\tbreak;\n\t\t} else {\n\t\t\tv = [ v ];\n\t\t\to = accessors( v );\n\t\t\tgetters.push( o.accessors[ 0 ] );\n\t\t\targs.push( v );\n\t\t\tstrides.push( 0 );\n\t\t}\n\t}\n\tif ( len === void 0 ) {\n\t\tlen = 1;\n\t}\n\tfor ( ; i < nargs; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isCollection( v ) ) {\n\t\t\tif ( v.length !== len ) {\n\t\t\t\tthrow new RangeError( 'invalid argument. Provided collections must have the same length.' );\n\t\t\t}\n\t\t\ts = 1;\n\t\t} else {\n\t\t\tv = [ v ];\n\t\t\ts = 0;\n\t\t}\n\t\to = accessors( v );\n\t\tgetters.push( o.accessors[ 0 ] );\n\t\targs.push( v );\n\t\tstrides.push( s );\n\t}\n\tvalues = [ str ];\n\toffsets = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tvalues.push( null );\n\t\toffsets.push( 0 );\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfor ( j = 0; j < nargs-1; j++ ) {\n\t\t\tvalues[ j+1 ] = getters[ j ]( args[ j ], offsets[ j ] );\n\t\t\toffsets[ j ] += strides[ j ];\n\t\t}\n\t\tlogger( format.apply( null, values ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default logEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: tools\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name log\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/console/log}\n*/\nimport log from './../log';\nsetReadOnly( ns, 'log', log );\n\n/**\n* @name logEach\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/console/log-each}\n*/\nimport logEach from './../log-each';\nsetReadOnly( ns, 'logEach', logEach );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["console","builtin","log","apply","arguments","logEach","str","strides","offsets","getters","values","nargs","args","len","v","s","o","i","j","isString","TypeError","format","length","isCollection","accessors","push","RangeError","logger","ns","setReadOnly"],"mappings":";;upCAsBIA,+CAKAC,EAAUD,EAAQE,IAkBtB,SAASA,IACRD,EAAQE,MAAOH,EAASI,UACzB,CCPA,SAASC,EAASC,GACjB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAUb,GACf,MAAM,IAAIc,UAAWC,EAAQ,kEAAmEf,IAMjG,IAJAK,EAAQP,UAAUkB,OAClBb,EAAU,GACVF,EAAU,GACVK,EAAO,GACDK,EAAI,EAAGA,EAAIN,EAAOM,IAAM,CAE7B,GAAKM,EADLT,EAAIV,UAAWa,IACU,CACxBD,EAAIQ,EAAWV,GACfL,EAAQgB,KAAMT,EAAEQ,UAAW,IAC3BZ,EAAKa,KAAMX,GACXP,EAAQkB,KAAM,GACdZ,EAAMC,EAAEQ,OACRL,GAAK,EACL,KACH,CAEGD,EAAIQ,EADJV,EAAI,CAAEA,IAENL,EAAQgB,KAAMT,EAAEQ,UAAW,IAC3BZ,EAAKa,KAAMX,GACXP,EAAQkB,KAAM,EAEf,CAID,SAHa,IAARZ,IACJA,EAAM,GAECI,EAAIN,EAAOM,IAAM,CAExB,GAAKM,EADLT,EAAIV,UAAWa,IACU,CACxB,GAAKH,EAAEQ,SAAWT,EACjB,MAAM,IAAIa,WAAY,qEAEvBX,EAAI,CACP,MACGD,EAAI,CAAEA,GACNC,EAAI,EAELC,EAAIQ,EAAWV,GACfL,EAAQgB,KAAMT,EAAEQ,UAAW,IAC3BZ,EAAKa,KAAMX,GACXP,EAAQkB,KAAMV,EACd,CAGD,IAFAL,EAAS,CAAEJ,GACXE,EAAU,GACJS,EAAI,EAAGA,EAAIN,EAAOM,IACvBP,EAAOe,KAAM,MACbjB,EAAQiB,KAAM,GAEf,IAAMR,EAAI,EAAGA,EAAIJ,EAAKI,IAAM,CAC3B,IAAMC,EAAI,EAAGA,EAAIP,EAAM,EAAGO,IACzBR,EAAQQ,EAAE,GAAMT,EAASS,GAAKN,EAAMM,GAAKV,EAASU,IAClDV,EAASU,IAAOX,EAASW,GAE1BS,EAAQN,EAAOlB,MAAO,KAAMO,GAC5B,CACF,CCtEA,IAAAkB,EAAA,CAAA,EAUAC,EAAAD,EAAA,MAAA1B,GAUA2B,EAAAD,EAAA,UAAAvB"}